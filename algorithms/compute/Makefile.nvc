CFLAGS = -Wall -O3
GPU_FLAGS = -mp=gpu
CC=nvc
CXX=nvc++

all: v100 rtx

v100: dwf_dslash_4_driver.cpp cps_driver.h timing.h
	for (( N1=5000; N1<=65000; N1+=2500 )); do \
	for (( N2=5000; N2<=65000; N2+=2500 )); do \
		if [ ! -f output_compute_$${N1}_$${N2}_int_nvc_v100.csv ]; then \
      $(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=int -o compute_$${N1}_$${N2}_int_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=long -o compute_$${N1}_$${N2}_long_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=float -o compute_$${N1}_$${N2}_float_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=double -o compute_$${N1}_$${N2}_double_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=int -DMEMCPY -o compute_$${N1}_$${N2}_int_memcpy_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=long -DMEMCPY -o compute_$${N1}_$${N2}_long_memcpy_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=float -DMEMCPY -o compute_$${N1}_$${N2}_float_memcpy_nvc_v100.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=double -DMEMCPY -o compute_$${N1}_$${N2}_double_memcpy_nvc_v100.out; \
			./compute_$${N1}_$${N2}_int_nvc_v100.out || break; \                     
			./compute_$${N1}_$${N2}_long_nvc_v100.out || break; \                    
			./compute_$${N1}_$${N2}_float_nvc_v100.out || break; \                   
			./compute_$${N1}_$${N2}_double_nvc_v100.out || break; \                  
			./compute_$${N1}_$${N2}_int_memcpy_nvc_v100.out || break; \              
			./compute_$${N1}_$${N2}_long_memcpy_nvc_v100.out || break; \             
			./compute_$${N1}_$${N2}_float_memcpy_nvc_v100.out || break; \            
			./compute_$${N1}_$${N2}_double_memcpy_nvc_v100.out || break; \ 
		fi; \
	done; done;

rtx: dwf_dslash_4_driver.cpp cps_driver.h timing.h
	for (( N1=5000; N1<=65000; N1+=2500 )); do \
	for (( N2=5000; N2<=65000; N2+=2500 )); do \
		if [ ! -f output_compute_$${N1}_$${N2}_int_nvc_rtx.csv ]; then \
      $(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=int -o compute_$${N1}_$${N2}_int_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=long -o compute_$${N1}_$${N2}_long_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=float -o compute_$${N1}_$${N2}_float_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=double -o compute_$${N1}_$${N2}_double_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=int -DMEMCPY -o compute_$${N1}_$${N2}_int_memcpy_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=long -DMEMCPY -o compute_$${N1}_$${N2}_long_memcpy_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=float -DMEMCPY -o compute_$${N1}_$${N2}_float_memcpy_nvc_rtx.out; \
			$(CXX) $(CFLAGS) $(GPU_FLAGS) compute.cpp -DN1=$${N1} -DN2=$${N2} -DTYPE=double -DMEMCPY -o compute_$${N1}_$${N2}_double_memcpy_nvc_rtx.out; \
			./compute_$${N1}_$${N2}_int_nvc_rtx.out || break; \                     
			./compute_$${N1}_$${N2}_long_nvc_rtx.out || break; \                    
			./compute_$${N1}_$${N2}_float_nvc_rtx.out || break; \                   
			./compute_$${N1}_$${N2}_double_nvc_rtx.out || break; \                  
			./compute_$${N1}_$${N2}_int_memcpy_nvc_rtx.out || break; \              
			./compute_$${N1}_$${N2}_long_memcpy_nvc_rtx.out || break; \             
			./compute_$${N1}_$${N2}_float_memcpy_nvc_rtx.out || break; \            
			./compute_$${N1}_$${N2}_double_memcpy_nvc_rtx.out || break; \ 
		fi; \
	done; done;

clean:
	$(RM) compute_*nvc_*.out
